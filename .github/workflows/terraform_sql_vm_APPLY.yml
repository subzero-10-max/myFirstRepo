name: 'SQLVM_TERRAFORM'

on: workflow_dispatch

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  VM_PASSWORD: "${{ secrets.VM_PASSWORD }}"

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 20
      
    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
        
    
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      working-directory: code/Config
      run: terraform init
      
    - name: terraform validate
      working-directory: code/Config
      run: terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      working-directory: code/Config
      run: terraform plan -var="password=${{ secrets.VM_PASSWORD }}"
      
#     - name: Terraform Apply
#       working-directory: code/Config
#       run: terraform apply
