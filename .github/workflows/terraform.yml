name: 'Terraform Plan/Apply'

on: #workflow_dispatch
 push:
   paths:
     - 'code/teraform/**'
     - 'code/terraform2/**'
      - 'code/**'

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
#     outputs:
#       tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
        
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          teraform:
            - 'code/teraform/**'
          terraform2:
            - 'code/terraform2/**'

    - name: teraform
      if: steps.changes.outputs.teraform == 'true'
      run: echo "WRK_DIR=code/teraform" >> $GITHUB_ENV

    - name: terraform2
      if: steps.changes.outputs.terraform2 == 'true'
      run: echo "WRK_DIR=code/terraform2" >> $GITHUB_ENV

#     - name: Checkout
#       uses: actions/checkout@v3
#       with:
#         path: $WRK_DIR
      
    - name: git config
      run: |
       git config --global url."https://${PERSONAL_ACCESS_TOKEN}@github.com".insteadOf "https://github.com"
        
#     - name: Print working directory
# #       env:
# #         folder: ${{ env.MYVAR }}
#       run: |
#         echo "WRK_DIR is $WRK_DIR"


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
#       env:
#         WRK_DIR: $WRK_DIR
      run: |
        cd $WRK_DIR
        terraform init
#       working-directory: ${{ env.WRK_DIR }}

    - name: Terraform Validate
      run: |
        cd $WRK_DIR
        terraform validate
#       working-directory: $WRK_DIR
    
    - name: Terraform plan
      run: |
        cd $WRK_DIR
        terraform plan
#       working-directory: $WRK_DIR
