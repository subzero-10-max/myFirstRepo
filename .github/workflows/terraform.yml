name: 'Terraform Plan/Apply'

on: workflow_dispatch
#   push:
#     paths:
#       - 'code/teraform/**'
#       - 'code/terraform2/**'

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
#     outputs:
#       tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
      
#     - name: Set working directory
#       run: |
#         if [[ $GITHUB_EVENT_PATH == *"teraform"* ]]; then
#           echo "::set-env name=MYVAR::${{ github.workspace }}"
#         elif [[ $GITHUB_EVENT_PATH == *"terraform2"* ]]; then
#           export MYVAR="./code/terraform2"
#           echo "::set-env name=MYVAR::${{ github.workspace }}"
#         fi

#     - name: Check which folder has been changed
#       run: |
#         if git diff --name-only ${{ github.base_ref }}...${{ github.head_ref }} | grep -q "^code/terraform/"; then
#           echo "terraform has been changed"
#           MYVAR="./code/terraform"
#         elif git diff --name-only ${{ github.base_ref }}...${{ github.head_ref }} | grep -q "^code/terraform2/"; then
#           echo "terraform2 has been changed"
#           MYVAR="./code/terraform2"
#         fi
        
#     - name: Determine working directory
#       run: |
#         if [[ "${{ github.event.head_commit.modified }}" == *"/teraform"* ]]; then
#           echo "::set-env name=MYVAR::./code/teraform"
#         elif [[ "${{ github.event.head_commit.modified }}" == *"terraform2"* ]]; then
#           echo "::set-env name=MYVAR::./code/terraform2"
#         else
#           echo "No changes in Terraform directories"
#           exit 1
#         fi
#     - name: Set Working Directory
#       run: |
#         if [[ -d "code/teraform" ]]; then
#           MYVAR="./code/terraform"
#         elif [[ -d "code/terraform2" ]]; then
#           MYVAR="./code/terraform2"
#         fi

#     - name: Set environment variable
#       run: |
#         echo "MYVAR=$MYVAR" >> $GITHUB_ENV


    - name: set variable
      run: |
        echo "MYVAR=./code/teraform" >> $GITHUB_ENV
        export $MYVAR

    - name: git config
      run: |
        git config --global url."https://${PERSONAL_ACCESS_TOKEN}@github.com".insteadOf "https://github.com"
        
    - name: Print working directory
      env:
        MYVAR: ${{ env.MYVAR }}
      run: |
        echo "MYVAR is $MYVAR"


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
#     - name: Terraform Init
#       run: terraform init
#       working-directory: $MYVAR

#     - name: Terraform Validate
#       run: terraform validate
#       working-directory: $MYVAR
    
#     - name: Terraform plan
#       run: terraform plan
#       working-directory: $MYVAR
