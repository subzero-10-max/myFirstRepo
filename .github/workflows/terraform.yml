name: 'Terraform Plan/Apply'

on: #workflow_dispatch
  push:
    paths:
      - 'code/teraform/**'
      - 'code/terraform2/**'
#       - 'code/**'

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
#     outputs:
#       tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
        
#     - name: Determine working directory
#       id: determine-directory
#       run: |
#         if [[ "$GITHUB_EVENT_PATH" ]]; then
#           folder=$(dirname "${{ fromJSON(toString(github.event_path)) }}")
#         else
#           folder=""
#         fi
#         echo "::set-output name=folder::$folder"


    - name: set variable
      run: |
        echo "MYVAR=$GITHUB_EVENT_PATH" >> $GITHUB_ENV
        

    - name: git config
      run: |
        git config --global url."https://${PERSONAL_ACCESS_TOKEN}@github.com".insteadOf "https://github.com"
        
    - name: Print working directory
      env:
        folder: ${{ env.folder }}
      run: |
        echo "folder is $GITHUB_WORKSPACE"
        
    - name: Print working directory
      env:
        folder: ${{ env.folder }}
      run: |
        echo "folder is $GITHUB_ACTOR"


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
#     - name: Terraform Init
#       run: terraform init
#       working-directory: $MYVAR

#     - name: Terraform Validate
#       run: terraform validate
#       working-directory: $MYVAR
    
#     - name: Terraform plan
#       run: terraform plan
#       working-directory: $MYVAR
